microarray <- read.csv('GSE7765-GPL96-series-matrix 2.txt')
pwd
setwd('/Users/zulfiiaditto/Documents/Bioinformatics/Analysis')
# open the file
microarray <- read.csv('GSE7765-GPL96-series-matrix 2.txt', skip = 66,
header = TRUE, sep = "\t", row.names = 1)
View(microarray)
dim(microarray)
#draw boxplot
boxplot(microarray, las = 2, cex.axis = 0.7 )
#draw boxplot
boxplot(microarray, las = 5, cex.axis = 0.7 )
#draw boxplot
boxplot(microarray, las = 2, cex.axis = 0.7 )
#draw boxplot
boxplot(microarray, las = 1, cex.axis = 0.7 )
#draw boxplot
boxplot(microarray, las = 2, cex.axis = 0.7 )
#draw boxplot
boxplot(microarray, las = 3, cex.axis = 0.7 )
#draw boxplot
boxplot(microarray, las = 4, cex.axis = 0.7 )
#draw boxplot
boxplot(microarray, las = 2, cex.axis = 0.7 )
#draw boxplot
boxplot(microarray, las = 2, cex.axis = 0.5 )
#draw boxplot
boxplot(microarray, las = 2, cex.axis = 0.7 )
clear
clear()
#
# shape of the table
dim(microarray)
max(microarray[1])
max(microarray[1])
min(microarray[1])
min(microarray)
max(microarray)
min(microarray)
# lets do log transfornation
microarrayLog <- apply(microarray, 2, log2)
View(microarrayLog)
View(microarrayLog)
install.packages("PreProcessCore")
install.packages("PreProcess")
boxplot(microarrayLog, las = 2, cex.axis = 0.7 )
install.packages("BiocManager")
BiocManager::install('preprocessCore')
# INSTALATION OF THE LIBRARIES
library(preprpcessCore)
# INSTALATION OF THE LIBRARIES
library(preprocessCore)
help(preprocessCore)
??preprocessCore
??normalize.quantiles
# normalization
microarrayLogNorm <- normalize.quantiles(microarrayLog)
View(microarrayLogNorm)
rownames(microarrayLogNorm) <-rownames(microarrayLog)
View(microarrayLogNorm)
View(microarrayLog)
View(microarrayLogNorm)
# renaming the columns
colnames(microarrayLogNorm) <- colnames(microarrayLog)
rownames(microarrayLogNorm) <-rownames(microarrayLog)
View(microarrayLog)
View(microarrayLogNorm)
View(microarray)
View(microarrayLog)
#box plot on the log and norm data
boxplot(microarrayLogNorm, las = 2, cex.axis = 0.7 )
plot(cluster)
clusters <- hclust(dist(t(microarrayLogNorm)))
plot(clusters)
??t
??translate
heatmap(microarrayLogNorm[highVar,], cexRow = 0.7, cexCol = 0.7)
# grouping of the samples
scaledVar <- apply(microarrayLogNorm,1,function(x){
var(x)/mean(x)
})
# highly variable genes
higVar <- names(which(scaledVar >1))
heatmap(microarrayLogNorm[highVar,], cexRow = 0.7, cexCol = 0.7)
# grouping of the samples
scaledVar <- apply(microarrayLogNorm,1,function(x){
var(x)/mean(x)
})
# highly variable genes
highVar <- names(which(scaledVar >1))
heatmap(microarrayLogNorm[highVar,], cexRow = 0.7, cexCol = 0.7)
pwd
setwd("~/Documents/bioinformatics/Analysis/protein_analysis")
igh1 <- read.csv('IDH1.fa')
View(igh1)
View(igh1)
igh1 <- read.fasta('IDH1.fa')
install.packages("seqinr", repos="http://R-Forge.R-project.org")
library(seqinr)
install.packages('seqinr')
library(seqinr)
igh1 <- read.fasta('IDH1.fa', package = "seqinr")
igh1 <- read.fasta('IDH1.fa')
View(igh1)
print(igh1[109])
print(length(igh1))
print(igh1)
igh1 <- read.fasta('IDH1.fa', seqtype = 'AA')
print(igh1)
print(igh1[109])
print(igh1[99][10])
print(igh1[[99]][10])
print(igh1[[99]])
print(igh1[[109]])
remove.packages(seqinr)
remove.packages('seqinr')
igh1 <- read.fasta('IDH1.fa', seqtype = 'AA')
dim(igh1)
igh1 <- read.table('https://dannyarends.nl/bioinfo/phenotypes.txt')
View(igh1)
View(igh1)
df <- read.csv(url('https://dannyarends.nl/bioinfo/phenotypes.txt'))
df <- read.csv('phenotype.txt')
df <- read.csv('phenotypes.txt')
View(df)
df <- read.table('phenotypes.txt')
View(df)
df[1:10, 1:5]
# correlations
correlations <- cor(df)
correlations[1:10, 1:5]
correlations <- cor(df, use ='pair')
correlations[1:10, 1:5]
highcor <- NULL
for(r in rownames(correlations)) (
for(c in colnames(correlations)) (
if(correlations[r,c] > 0.7) (
connection <- c(r , "to", c)
highCor <- rbind(highcor, connection)
highcor <- NULL
for(r in rownames(correlations)) {
for(c in colnames(correlations)) {
if(correlations[r,c] > 0.7) {
connection <- c(r , "to", c)
highCor <- rbind(highcor, connection)
}
}
}
highcor[1:10, 1:5]
highcor[1:10]
View(highCor)
highcor <- NULL
for(r in rownames(correlations)) {
for(c in colnames(correlations)) {
if(correlations[r,c] > 0.7) {
connection <- c(r , "to", c)
highcor <- rbind(highcor, connection)
}
}
}
highcor[1:10]
View(highCor)
View(highcor)
